#!/usr/bin/env node

var program = require('commander');
var version = require('../package').version;
var run = require('../lib/run');
var build = require('../lib/build');

program
  .version(version, '-v, --version');

program
  .command('build')
  .option('-c, --clean', 'clean output dir before build')
  .option('--dev', 'build development version')
  .option('--verbose', 'output verbose information')
  .option('-w, --watch', 'rebuild on file change')
  .option('--ts', 'build a typescript project, default babel+es6')
  .action(function(options) {
    run(build.bind(undefined, options));
  });

program
  .command('test')
  .option('-o, --output <output>', 'set output dir [coverage]', 'coverage')
  .option('-w, --watch', 'rebuild on file change')
  .option('--ts', 'build a typescript project, default babel+es6')
  .action(function(options) {});

program
  .command('unfreeze')
  .option('-a, --aggresive', 'version >=')
  .action(function(options) {
    run(require('../lib/updater').unfreeze.bind(undefined, options));
  });

program
  .command('freeze')
  .action(function() {
    run(require('../lib/updater').freeze);
  });

program.parse(process.argv);
